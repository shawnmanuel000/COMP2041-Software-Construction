<!DOCTYPE html>
<!-- saved from url=(0064)http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Assignment 2 - matelook</title>
<link href="./Assignment 2 - matelook_files/2041.css" rel="stylesheet">
</head>
<body>
<div class="container">
<div class="page-header">
<h1>Assignment 2 - matelook</h1>
</div>

<h2>Aims</h2>

<p>
This assignment aims to give you:
</p><ul>
<li> experience in constructing a CGI script and Perl/Python programming generally,
</li><li> practice in producing a complete CGI-based web site,
</li><li> and an introduction to the issues involved in programming for the web.
</li></ul>
<b>Note:</b> the material in the lecture notes will not be sufficient
by itself to allow you to complete this assignment.
You may need to search on-line documentation for CGI, Perl/Python etc.
Being able to search documentation efficiently for the information you need is a
<em>very</em> useful skill for any kind of computing work.

<h2>Introduction</h2>

Andrew has decided he will make himself rich exploiting COMP[29]041 students' coding skills and then give up lecturing.
Andrew's plan is to have COMP[29]041 students create a social media platform called <i>matelook</i>
for UNSW students.
Andrew is unaware of any other social media platforms so he thinks
<i>matelook</i> will become very popular and he will become rich
<p>
<i>matelook</i> allows users post messages and comments on these messges and replies to these comments to be added.
</p><p>
<i>matelook</i> allows users to indicate other users are their <i>mates</i>
</p><p>
Your task is to produce a CGI script <code>matelook.cgi</code> which provides the core features of <i>matelook</i>.
</p><p>
In other words your task is to implement a simple but fully functional social media web site.
</p><p>
But don't panic, the assessment for this assignment (see below) will allow you to obtain
a reasonable mark if you successfully complete some basic features.

</p><h2>Data Sets</h2>

You have been provided with 3 synthetic datasets containing the details of <i>matelook</i> users &amp; their postings:
<ul>
<li> <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-small">small</a> (4Mb unpacked) <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-small.zip">zip</a> (0.4Mb) <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-small.tar.xz">tar.xz</a> (0.1Mb) - 10 users, 42 posts, 209 comments, 163 replies
</li><li> <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-medium">medium</a> (44Mb unpacked) <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-medium.zip">zip</a> (4Mb) <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-medium.tar.xz">tar.xz</a> (0.8Mb) - 42 users, 420 posts, 2520 comments, 1749 replies
</li><li> <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-large">large</a> (340Mb unpacked) <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-large.zip">zip</a> (28Mb) <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-large.tar.xz">tar.xz</a> (8Mb)  - 420 users, 3525 posts, 19080 comments, 13277 replies
</li></ul>
<p>
I expect most people will work with <i>medium</i> or <i>large</i> datasets.
During debugging you may find the <i>small</i> dataset useful.
</p><p>
The information for each user is in a separate directory named with their zid name
For example in the <i>medium</i> dataset UNSW student James Franco has zid z5098340 so his information is in the directory:
<a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-medium/z3275760/"><code>dataset-medium/z3275760/</code></a>
</p><p>
Each  <i>matelook</i> user's directory contains a file named <code>user.txt</code> containing
relevant information that the <i>matelook</i> user has supplied.
</p><p>
For example <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-medium/z3275760/user.txt">dataset-medium/z3275760/user.txt</a>
contains James's details:

</p><pre class="program">email=J.Franco@unsw.edu.au
program=Engineering/Commerce
zid=z3275760
full_name=James Franco
courses=[2014 S1 CHEM1011, 2014 S1 ENGG1000, 2014 S1 MATH1131, 2014 S1 PHYS1121, 2014 S2 CVEN1300, 2014 S2 CVEN1701, 2014 S2 ENGG1811, 2014 S2 MATH1231, 2015 S1 BIOS1301, 2015 S1 CVEN2402, 2015 S1 MARK1012, 2015 S1 MATH2019, 2015 S2 CEIC2009, 2015 S2 CVEN2701, 2015 S2 CVEN2702, 2015 S2 CVEN3731, 2016 S1 CVEN2501, 2016 S1 CVEN3101, 2016 S1 CVEN3202, 2016 S1 CVEN3701, 2016 S2 ACCT1501, 2016 S2 ECON1101, 2016 S2 FINS1613, 2016 S2 MGMT1001]
password=debbie
birthday=1998-03-25
home_suburb=University Of New South Wales
mates=[z3485885, z5063045, z5013363, z5014335]
</pre>

Note James has supplied the suburb where he lives and the coordinates of his home address.
Notice also the list of James' mates.
<p>
Most <i>matelook</i> users will also have an image  present in the same directory named <code>profile.jpg</code>.
For example <a href="./Assignment 2 - matelook_files/profile.jpg"><code>dataset-medium/z3275760/profile.jpg</code></a>
contains James's image.
</p><p>
<img src="./Assignment 2 - matelook_files/profile.jpg">
</p><p>
Note some details may be missing for some <i>matelook</i> users.
This is deliberate, it indicates the <i>matelook</i> user has chosen not to supply this information
and your web site should handle this sensibly. Also images might not be present for all users.
Again your web site should handle this sensibly.
</p><p>
Also present in a <i>matelook</i> users's directory may be directory named <code>posts</code> containing posts they've made
in numbered sub-directories.
</p><p>
For example <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-large/z5017894/posts/5/post.txt">dataset-large/z5017894/posts/5/post.txt</a> contains:

</p><pre class="program">from=z5017894
time=2013-11-03T05:54:30+0000
latitude=-33.9138
message=To the shy boy in electrical engineering, Adrian, I've had a crush on you for years. You're everything that I didn't think I wanted in a man. Please complete my circuit, amplify my current and exceed my wattage. You know who I am by the way - DB, your friend and lover.
longitude=151.2400
</pre>

Post directories can contain a directory named <code>comments</code>.  It will contain, in numbered sub-directories comments made on the post.
<p>
For example <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-small/z5099187/posts/2/comments/2/comment.txt">dataset-small/z5099187/posts/2/comments/2/comment.txt</a> contains:

</p><pre class="program">from=z3462191
time=2016-04-26T07:55:01+0000
message=HAHAHAHAHAHA okay which one of you was this z5063045 z5099187 z3493921 z5059413
</pre>

Note this mentions 4 other <i>matelook</i> users  using the <i>matelook</i> convention of referencing other users with their zid.
<p>
Comment directories can contain a directory named <code>replies</code>.  It will contain, in numbered sub-directories replies made to that comment.
</p><p>
For example <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-medium/z5076002/posts/9/comments/1/replies/1/reply.txt">dataset-medium/z5076002/posts/9/comments/1/replies/1/reply.txt</a> contains:

</p><pre class="program">message=This was def u z5079464 hahahah
from=z5062399
time=2016-06-12T01:44:26+0000
</pre>

You are free to modify the dataset and the data format in any way you choose.
Your code should still assume  details may be absent from  <i>matelook</i> user details posts and comments because <i>matelook</i> users choose not to supply them.
<p>
While you do not have to use this format to store data but I expect most students
will do so and unless you are very confident it is recommended you do so.
</p><p>
If you use another data format
you should import the large dataset into this format and have it available
when you demo your web site so searches can be conducted using a familiar set of <i>matelook</i> users.
</p><p>
Before choosing to use a database to store <i>matelook</i> user data,
note it can be tricky getting full-fledged database systems such as mysql set up on CSE systems
and Andrew (&amp; tutors) won't be able to offer any help.
If you do choose to use a database sqlite is recommended because its embedded,
and hence much simpler to setup, but again Andrew (&amp; tutors) won't be able to help.

</p><h2>Subsets</h2>

To assist you tackling the assignments requirements have been broken into several levels in
approximate order of difficulty.  You do not have to follow this implementation order but
unless you are confident I'd recommend following this order.

You will receive marks for whatever features you have working or partially working
 (regardless of subset &amp; order).

<h4>Display User Information &amp; Posts (Level 0)</h4>

The starting-point script you've been given (see below) displays user information
in raw form and does not display their image or posts.
<p>
Your web site should display user information
in nicely formatted HTML with appropriate accompanying text.  It should
display the user's image if there is one.
</p><p>
Private information such e-mail, password, lat, long and courses should not be displayed.
</p><p>
The user's posts should be displayed in reverse chronological order.

</p><h4>Interface (Level 0) </h4>

Your web site must generate nicely formatted convenient-to-use web pages
including appropriate navigation facilities and instructions for naive users.
Although this is not a graphic design exercise you should produce pages with a common
and somewhat distinctive look-and-feel. You may find CSS useful for this.
<p>
As part of your personal design you may change the name of the website to something
other than  matelook but the primary CGI script has to be <code>matelook.cgi</code>.

</p><h4>Mate list (Level 1)</h4>

When a matelook page is shown a list of the names of that user's mates
should be displayed.
<p>
The list should include a thumbnail image of the mate (if they have a profile image).
</p><p>
Clicking on the image and/or name should take you to that matelook page.

</p><h4>Search for  Names (Level 1)</h4>

Your web site should provide searching for a user whose name containing a
specified substring.  Search results should include the matching name
and a thumbnail image.  Clicking on the image and/or name should
take you to that matelook page.

<h4>Logging In &amp; Out (Level 1)</h4>

Users should have to login to use matelook.
<p>
Their password should be checked when they attempt to log in.
</p><p>
Users should also be able to logout.


</p><h4>Displaying Posts (Level 2)</h4>

When a user logs in they should see their recent posts, any posts from their mates
and any posts which contain their zid in the post, comments or replies.
<p>
Comments and replies should be shown appropriately with posts.
</p><p>
When displaying posts zids should be replaced with a link to the user's matelook page.
The link text should be the user's full name.

</p><h4>Making Posts(Level 2)</h4>

Users should be able to make posts.

<h4>Searching Posts (Level 2)</h4>

It should be possible to search for posts containing particular words.

<h4>Commenting on Post and replying to Comments (Level 2) </h4>

When viewing a post, it should be possible to click on a link and create a comment on that post.

When viewing a comment , it should be possible to click on a link and create a reply to that comment.

<h4>Mate/Unmate Users (Level 3)</h4>

A user should be able to add &amp; delete users from their mate list.

<h4>Pagination of Posts &amp; Search Results (Level 3)</h4>

When searching for users or posts and when viewing posts
the users be shown the first <i>n</i> (e.g n == 16) results.
They should be able then view the next  <i>n</i> and the next <i>n</i> and so on.

<h4>User Account Creation (Level 3) </h4>

Your web site should allow users to create accounts with a
zid, password and e-mail address.
You should  of course check
that an account for this zid does not exist already.
It should  be compulsory that a valid e-mail-address is associated with an account but
the e-mail address need not be a UNSW address.
<p>
You should confirm e-mail address are valid and owned by the <i>matelook</i> user creating the account by
e-mailing them a link necessary to complete account creation.
</p><p>
I expect (and recommend) most students to use the data format of the data set
you've been supplied.  If so for a new user you would need create
a directory named with their zid and then add a appropriate <code>user.txt</code>
containing their details.

</p><h4>Profile Text (Level 3) </h4>

A <i>matelook</i> user should be able to add to some text to their details , probably
describing their interests, which is displayed with their user details.

<pre class="program"><i>
My interests are long walks on the beach and Python programming.
I plan to use what I've learnt COMP2041 to cure the world of all known diseases.
</i>
</pre>

It should be possible to use some simple (safe) HTML
tags, and only these tags, in this text.

The data set you've been given doesn't any include any examples of such text.
<p>
You can choose to store this text in the <code>user.txt</code> file or elsewhere,

</p><h4>Mate Requests (Level 3) </h4>

A user, when viewing a matelook page, should be able to send a <i>mate request</i>
to the owner of that matelook page.  The other user  should be notified
by an e-mail. The e-mail should containing an appropriate link to the web site
which will allow them to accept or reject the mate request.

<h4>Mate Suggestions (Level 3)</h4>

Your web site should be able  to provide a list of likely mate suggestions.
<p>
Your web site should display matelook users  sorted on how likely the
user is to know them.
It should  display a set (say 10) of matelook users.
It should allow the next best-matching set of potential mates or the
previous set of potential mates users to be viewed.
</p><p>
The user should be able to
click on a potential mate , see their matelook page (where there will
be able to send them a mate request).
</p><p>
Your matching algorithm should assume that people who have taken the same course in
the same session may know each other.
</p><p>
 For example
<a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-medium/z5017258/user.txt">Ralph Firman</a> and
<a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/dataset-medium/z5024986/user.txt">Sheryl Crow</a> are both taking
<i>2016 S2 PSYC1011</i> which should cause your algorithm
to make Ralph a more likely mate suggestion
for Sheryl (and vice-versa).
</p><p>
Your matching algorithm should also  assume that people may know mates of their mates.
</p><p>
You may choose to have your matching algorithm  use other part of user details.
</p><p>
Note there are many choices in this matching algorithm so your results will
differ from other students.  Be prepared to explain how &amp; why your matching algorithm works during
your assignment demo.  You may chose to have a development mode available which
when turned on displays extra information regarding the matching.

</p><h4>Password Recovery (Level 3)</h4>

Users should be able to recover/change lost passwords via having an  e-mail sent to them.

<h4>Uploading &amp; Deleting  Images (Level 3)</h4>

In addition to their profile image users should also be allowed to add a background image.

A user should be able to upload/change/delete both background &amp; profile images.

The lecture CGI examples include one for uploading a file.

<h4>Editing Information (Level 3) </h4>

A user should be able to edit their details and change their profile images.

<h4>Deleting Posts (Level 3) </h4>

A <i>matelook</i> user should also be able to delete any of their posts, comments or replies,

<h4>Suspending/Deleting matelook Account (Level 3) </h4>

A <i>matelook</i> user not currently interested in matelook  should be able to suspend their
account. A suspended account is not visible to other users.
<p>
A <i>matelook</i> user should also be able to delete their account completely.

</p><h4>Notifications (Level 3) </h4>

A user should be able to indicate they wish to be  notified by e-mail
in one of these events:

<ul>
<li> their zid is mentioned in a post, comment or reply
</li><li> they get a  mate request
</li></ul>


<h4>Including Links, Images &amp; Videos (Level 3) </h4>

A user should be able to include links, images and videos
in a post, comment or reply.  These should be appropriately displayed when the item is viewed.

<h4>Privacy(Level 3) </h4>

A user should be able to make part or all of the content of
their matelook page visible only to their mates.

<h4>Advanced Features (Level 4) </h4>

If you wish to obtain over 90% you should consider providing adding  features beyond those above.
marks will be available for extra features.

<h2>Getting Started</h2>

Here is the <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/matelook.cgi.txt">source</a> to a <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/matelook.cgi">Perl script</a>
with crude partial implementation of Level 0.
You may choose to use this script as a starting point for your assignment.
<p>
The same Perl but using <code>cgi.pm</code> shortcuts is also <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/matelook.cgipm.cgi.txt">available</a>.
You may choose to start with instead this version if you prefer this style of coding.
</p><p>
A  Python version of the same code is also <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/matelook.py.cgi.txt">available</a>.
You may choose to start with this code if you prefer to the the assignment in Python.
It is strongly recommended you use Python 3.5.  The versions of Python 2 on CSE's CGI server are inconsistent
with those on the lab machines and may be missing some packages.
</p><p>
However you start the assignment, make sure you name your script <code>matelook.cgi</code>.
</p><p>
All the above CGI scripts refer to a CSS file named <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/matelook.css">matelook.css</a>.
It contains some simple CSS you can use as a starting point, but don't spend  much time on CSS - almost all
the marks are for coding!
</p><p>
You should use the  gitlab.cse.unsw.edu.au repository you've been using for the lab CGI exercises for
this assignment.  You can do this be using the commands below.

</p><pre class="command_line"><kbd class="shell">cd</kbd>
<kbd class="shell">mkdir -p public_html/ass2</kbd>
<kbd class="shell">priv webonly public_html/ass2</kbd>
<kbd class="shell">cd public_html/ass2</kbd>
<kbd class="shell">git clone gitlab@gitlab.cse.unsw.EDU.AU:z5555555/16s2-comp2041-ass2 .</kbd>
Cloning into '.'...
<kbd class="shell">unzip /home/cs2041/public_html/assignments/matelook/dataset-medium.zip</kbd>
....
<kbd class="shell">chmod 700 matelook.cgi</kbd>
<kbd class="shell">chmod 644 matelook.css</kbd>
<kbd class="shell">git add matelook.cgi matelook.css</kbd>
....
<kbd class="shell">firefox http://cgi.cse.unsw.edu.au/~z5555555/ass2/matelook.cgi</kbd>
<kbd class="shell">vi matelook.cgi</kbd>
<kbd class="shell">vi diary.txt</kbd>
<kbd class="shell">git add diary.txt</kbd>
<kbd class="shell">git commit -a -m 'added code for basic formatting'</kbd>
<kbd class="shell">git push</kbd>
....
<kbd class="shell">git commit -a -m 'tidied up assignment for submission'</kbd>
<kbd class="shell">give cs2041 ass2 matelook.cgi diary.txt</kbd>
<kbd class="shell">git push</kbd>
....
</pre>

I expect most students will just work in their CSE account and push work to gitlab.cse.unsw.edu.au
from CSE, but you can try setting up a git repository on your home machine
and pushing work to gitlab.cse.unsw.edu.au from there.
<p>
If you do this you'll want to
use git's pull command to update the repository in your CSE account.
</p><p>
</p><pre class="command_line"><kbd class="shell">git pull</kbd>
Unpacking objects: 100% (3/3), done.
From gitlab@gitlab.cse.unsw.EDU.AU/z5555555/16s2-comp2041-ass2.git
   226cddf..e64fee9  master     -&gt; origin/master
Updating 226cddf..e64fee9
Fast-forward
 matebook.cgi |    1 +
 1 file changed, 1 insertion(+)
</pre>

You can complete this assignment just by running CGI scripts from CSE account.
Some students find it convenient to install a webserver on their personal machine
so they can run CGI scripts locally.  There are multiple ways to this all of which
depend on the software available on your machine.  Here are
 <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/docker.html">instructions for running a webserver using Docker</a>.


<h2>Assumptions/Clarifications</h2>

It is a requirement of the assignment that when you work the assignment for
more than a few minutes you push the work to <code>gitlab.cse,unsw.edu</code> (see above).
<p>
I expect almost all students will use Perl to complete this assignment
but you are permitted to use Python.
</p><p>
You may use Javascript for part of the assignment.
A high mark for the assignment can be obtained without Javascript.
</p><p>
You may use any Perl or Python package which is installed on CSE's system.
</p><p>
You may use general purpose, publicly available (open source) Javascript libraries (e.g. JQuery)
,CSS (e.g.Bootstrap) or HTML - much sure use of other people's work is clearly acknowledged and distinguished
from your own work.
</p><p>
You can not otherwise use code written by another person.
</p><p>
You may submit multiple CGI files but the primary file must be named matelook.cgi
You may submit other files used by your CGI script(s).
</p><p>
If you submit an executable named <code>init</code>, it will be run once before before your
assignment, is in the same directory as your assignment.  This is provide the possibility of set up
code for complex assignments.  I expect only a few student will need this.
</p><p>
Make sure you submit all files and in the appropriate hierarchy.
If for example you do URL rewriting in a <code>.htaccess</code> file (I'm
not expecting or recommending this), make sure you submit the .htaccess file.
</p><p>
Your CGI script must run on CSE's system. It will be run from a class account so you
must submit all necessary files and do not hard code absolute URLs or pathnames in your code.
</p><p>
Do not use a URL like <code>http://www.cse.unsw.edu.au/~z5555555/ass2/subdir/background.html</code> in your code -
use a relative URL like  <code>"subdir/background.html"</code>.
</p><p>
Similarly don't put a pathnames such as <code>/home/z5555555/public_html/ass2/subdir/datafile"</code>
in your code - use a relative pathname such as <code>"subdir/datafile"</code>
</p><p>
You scripts will accessed via a  <b>https</b> URL at the demo session so check it works with
https, e.g. when you access it as <code>http://www.cse.unsw.edu.au/~z5555555/ass2/matelook.cgi</code>
</p><p>
For this reason do not use <b>http</b> URLs for external resources (e.g. Bootstrap) use a <b>https</b> URL.
</p><p>
We will use firefox(iceweasel) on CSE lab machines for the demo session. Your code should
be sufficiently portable to work on with that version of firefox  but you will be allowed to demo on Chrome
instead but again on a CSE lab machine.
</p><p>
You should avoid running external programs (via system, subprocess, back quotes or open).
where an equivalent operation could be performed simply in Perl/Python.
You may be penalized in the handmarking if you do so.
</p><p>
You are permitted to run an external program to send e-mail, although this
is possible from Perl &amp; Python.
</p><p>
You are only required to provide basic security - using a hidden field
to store user's password in plaintext is OK. More sophisticated security may qualify as an
extra feature for subset 4.
</p><p>
You should follow  discussion about the assignment in the
<a href="https://piazza.com/unsw.edu.au/fall2016/comp2041comp9041/home">course forum</a>.
All questions about the assignment should be posted there unless they concern your private circumstances.
This allows all students to see all answers to questions.

</p><h2>Diary</h2>
You must keep a record of your work on this assignment as you did for assignment in an ASCII file
The entries should include date, starting&amp;finishing time, and a brief (one or two line) description of
the work carried out.
For example:

<table class="table table-bordered">
<tbody><tr><th>Date</th><th>Start</th><th>Stop</th><th>Activity</th><th>Comments
</th></tr><tr><td>29/10</td><td>16:00</td><td>17:30</td><td>coding</td><td>implemented creation of user accounts
</td></tr><tr><td>30/10</td><td>20:00</td><td>10:30</td><td>debugging</td><td>found bug in handling of zids
</td></tr></tbody></table>

Include these notes in the files you submit as an ASCII file named diary.txt.
<p>
Some students choose to store this information in git commit messages
and use a script to generate  <code>diary.txt</code> from <code>git log</code> before they submit.
You are welcome to do this.

</p><h2>Assessment</h2>

Assignment 2 will contribute 15 marks to your final COMP2041/9041 mark
<p>
Assignment 2 marking occurs in peer assessment sessions.
Details of the peer assessment sessions will be announced in week 13.
Your must attend one  peer assessment sessions.
</p><p>
80% of the marks for assignment 2 will come frome
your submitted CGI script being tested against a specified set of operations and assessed
by fellow students.
You will be present to assist in determining what features are and are not
working, you will also be able to indicate any extra features you have implemented.
</p><p>
20% of the marks for assignment 2  will be awarded on the basis of clarity,
commenting, elegance and style of your code..  In other words, your fellow students will assess how
easy it is for a human to read and understand your program.
</p><p>
Here is an indicative marking scheme .
</p><p>
</p><table class="table table-bordered table-striped">
<tbody><tr><td align="right">100%</td><td>Elegant Perl/Python with an excellent implementation of levels 0-3 and
some optional (level 4) features
</td></tr><tr><td align="right">90+%</td><td>Very well written Perl/Python which implements levels 0-3 successfully
</td></tr><tr><td align="right">85%</td><td>Well written Perl/Python which implements most of levels 0-3 successfully
</td></tr><tr><td align="right">75+%</td><td>Readable Perl/Python which implements of levels 0-2 successfully
</td></tr><tr><td align="right">65%</td><td>Reasonably readable code which implements level 0-1 successfully
</td></tr><tr><td align="right">55%</td><td>Reasonably readable code which implements level 0 successfully
</td></tr><tr><td align="right">45%</td><td>Major progress on the assignment with some things working/almost working
</td></tr><tr><td align="right">-70%</td><td>Knowingly supplying  work to any other person which is subsequently submitted by another student.
</td></tr><tr><td>0 FL for COMP2041/9041</td><td>Submitting any other person's work with their consent.  This includes joint work.
</td></tr><tr><td>academic misconduct</td><td>Submitting another person's work without their consent.
</td></tr></tbody></table>
<p>
The lecturer may vary the assessment scheme after inspecting
the assignment submissions but its likely to be broadly similar to the above.

</p><h2>Originality of Work</h2>

The work you submit must be your own work.  Submission of work partially or completely derived
from any other person or jointly written with any other person is not permitted.
The penalties for such an offence may include negative marks,
automatic failure of the course and possibly suspension from UNSW.
Assignment submissions will be examined both automatically and manually
for such submissions.
<p>
Relevant scholarship authorities will be informed if students holding scholarships
are involved in an incident of plagiarism or other misconduct.
</p><p>
Plagiarism or other misconduct can also result in loss of student visas.
</p><p>
Do not provide or show your assignment work to any other person - apart from the teaching staff
of COMP2041/9041.
If you knowingly provide or show your assignment work to another person for any
reason, and work derived from it is submitted you may be penalized, even
if the work was submitted without your knowledge or consent.  This may
apply even if your work is submitted by a third party unknown to you.
</p><p>
Note, you will not be penalized if your work is
taken without your consent or knowledge.

</p><h2>Submission</h2>

This assignment is  due at 23:59pm Sunday October 30
Submit the assignment using this <i>give</i> command:


<pre class="command_line"><kbd class="shell">give cs2041 ass2 matelook.cgi matelook.css diary.txt [files.tar] [any-other-files]</kbd>
</pre>

If you have need to submit many other files, files in a sub-directory or a
directory hierarchy, submit them as a tar file named files.tar.  For example
if you have subdirectories named <i>css</i>, <i>js</i> and <i>images</i>, this
will submit all the files in them (including directories they contain).
<p>
Do not submit the datasets unless you have changed them.

</p><pre class="command_line"><kbd class="shell">tar -Jcf files.tar css js images</kbd>
<kbd class="shell">give cs2041 ass2 matelook.cgi diary.txt files.tar</kbd>
</pre>

If your assignment is submitted after this date, each hour it is late reduces
the maximum mark it can achieve by 1%.
For example if an assignment worth 76% was submitted
5 hours late, the late submission would have no effect.
If the same assignment was submitted 30 hours late it would be awarded
70%, the maximum mark it can achieve at that time.

<ul>
</ul>

<p>
</p></div>
<script src="./Assignment 2 - matelook_files/2041.js"></script>


<div id="pkt_ext_master" class="pkt_ext_container"><div id="pkt_ext_save_plate"><div class="pkt_ext_component_save">

    <div class="pkt_ext_save_details pkt_ext_platter">
        <div class="pkt_ext_save_toolbar">
            <div class="pkt_ext_toolbar_main">
                <div class="pkt_ext_logo">
                    <svg class="pkt_ext_icon" viewBox="0 0 22 22"><path d="M21.79,2.55a2,2,0,0,0-1.86-1.3H2.08a2,2,0,0,0-2,2V9.82l0.08,1.31a10.66,10.66,0,0,0,4.25,7.4l0.13,0.1,0,0a10.79,10.79,0,0,0,4.26,1.89,10.92,10.92,0,0,0,4.18,0l0.24,0,0.07,0a10.79,10.79,0,0,0,4.09-1.85l0,0,0.13-.1a10.66,10.66,0,0,0,4.25-7.4L21.9,9.82V3.23A2,2,0,0,0,21.79,2.55ZM17.18,9.42L12,14.34a1.49,1.49,0,0,1-2.07,0L4.85,9.42A1.5,1.5,0,0,1,6.92,7.26L11,11.19l4.09-3.93A1.5,1.5,0,0,1,17.18,9.42Z"></path></svg>
                </div>
                <div class="pkt_ext_logo_action_copy">Page Saved!</div>
                <div class="pkt_ext_actions">
                    <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/#" alt="Archive Page" class="pkt_ext_action_overflow simple-tooltip">
                        <svg class="pkt_ext_icon" viewBox="0 0 100 100">
                            <path d="M15 40c5.46 0 10 4.54 10 10s-4.54 10-10 10S5 55.46 5 50s4.54-10 10-10zm60 10c0 5.46 4.54 10 10 10s10-4.54 10-10-4.54-10-10-10-10 4.54-10 10zm-35 0c0 5.46 4.54 10 10 10s10-4.54 10-10-4.54-10-10-10-10 4.54-10 10z"></path>
                        </svg>
                    </a>
                    <ul class="pkt_ext_overflow">
                        <li class="pkt_ext_overflow_item">
                            <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/#" alt="Archive Page" class="pkt_ext_action_archive simple-tooltip">
                                <svg class="pkt_ext_icon" viewBox="0 0 16 16"><polygon points="1 9 3 7 6 10 14.02 2.02 16 4 6 14.02 1 9"></polygon></svg>
                                Archive Page
                            </a>
                        </li>
                        <li class="pkt_ext_overflow_item divider">
                            <a href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/#" alt="Remove Page" class="pkt_ext_action_removeitem simple-tooltip">
                                <svg class="pkt_ext_icon" viewBox="0 0 16 16">
                                    <path d="M12,3V1H4V3H1V5H15V3ZM5,2h6V3H5V2Z"></path>
                                    <polygon points="3.01 16 13.03 16 13.03 6 3.03 6 3.01 16"></polygon>
                                </svg>
                                Remove Page
                            </a>
                        </li>
                        <li class="pkt_ext_overflow_item">
                            <a alt="Open Pocket" href="http://getpocket.com/a" target="_blank" class="pkt_ext_action_home simple-tooltip">
                                <svg class="pkt_ext_icon" viewBox="0 0 16 16">
                                    <path d="M14.05,13.95v-4a1,1,0,0,0-2,0V13h-9V5H6A1,1,0,0,0,6,3h-4a1,1,0,0,0-1,1V14a1,1,0,0,0,1,1h11a1,1,0,0,0,1-1s0,0,0,0h0Z"></path>
                                    <path d="M15.06,1h-5a1,1,0,1,0,0,2h1.58L6.17,8.28A1,1,0,1,0,7.56,9.72l5.5-5.31V6a1,1,0,0,0,2,0V2h0V1Z"></path>
                                </svg>
                                Open Pocket
                            </a>
                        </li>
                        <li class="pkt_ext_overflow_item">
                            <a alt="Open Settings" href="http://cgi.cse.unsw.edu.au/~cs2041cgi/16s2/assignments/matelook/#" class="pkt_ext_action_options simple-tooltip">
                               <svg class="pkt_ext_icon" viewBox="0 0 16 16">
                                  <path d="M15,9V7H13.4a5.53,5.53,0,0,0-1-2.21l1.39-1.39L12.41,2,11,3.41l0,0A5.45,5.45,0,0,0,9,2.6V1H7V2.6a5.49,5.49,0,0,0-2.22.95L3.41,2.18,2,3.59,3.4,5a5.48,5.48,0,0,0-.8,2H1V9H2.61a5.53,5.53,0,0,0,.8,2L2,12.41l1.41,1.41,1.38-1.38A5.46,5.46,0,0,0,7,13.4V15H9V13.39a5.53,5.53,0,0,0,2-.81L12.41,14l1.41-1.41L12.44,11.2a5.46,5.46,0,0,0,1-2.2H15ZM8,10.29A2.29,2.29,0,1,1,10.29,8,2.29,2.29,0,0,1,8,10.29Z"></path>
                                </svg>
                                Settings
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="pkt_ext_tag_detail">
                <div id="pkt_ext_tag_input_wrapper" class="pkt_ext_tag_input_wrapper"><span class="taggle_placeholder" style="opacity: 1;">Add Tags</span><ul class="taggle_list"><li><input type="text" class="taggle_input" tabindex="1"></li></ul><div class="taggle_sizer" style="font-size: 14px;"></div></div>
                <div id="pkt_ext_no_suggestions"></div>
                <ul id="pkt_ext_suggested_tags" class="suggested_tags"><li>programming</li><li>javascript</li><li>security</li><li>politics</li><li>python</li></ul>
            </div>
        </div>
    </div>

    <div id="pkt_ext_save_recs" class="pkt_ext_rec_active"><div class="pkt_ext_recommendations pkt_ext_platter pkt_ext_loaded" id="pkt_ext_recommendations">
    <div class="pkt_ext_loading" id="recommendations-trigger">
        <div class="pkt_ext_loader">
            <div class="loader-inner ball-clip-rotate-pulse">
                <div></div>
                <div></div>
            </div>
        </div>
        Loading recommendations
    </div>
    <div id="pkt_ext_recommendations_list"><div class="pkt_ext_recs_header pkt_ext_recs_no_result">
Want to find more great stories?
<a class="pkt_ext_rec_cta" href="https://getpocket.com/a/recommended/?src=ext_recs" target="_blank">Explore Pocket's recommendations ›</a>
</div>
</div>
</div>
</div>
</div>
</div></div></body></html>